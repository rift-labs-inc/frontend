use dep::std;

struct BlockHeader {
    block_hash: [u8; 32],
    version: u32,
    prev_block_hash: [u8; 32],
    merkle_root: [u8; 32],
    timestamp: u32,
    bits: u32,
    nonce: u32,
}

fn main() {
    let block_hash = [
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x79, 0x22, 0x62, 0x69, 0xfe, 0xaa, 0xcf, 0xf7, 0x77, 0xd4, 0x2f, 0x3f, 0xa0, 0xd5, 0xb9, 0x2d, 0xbc, 0xed, 0xdf, 0xe1, 0x56, 0xbe
    ];
    let version = 536887296;
    let prev_block_hash = 0x0000000000000000000179226269feaacff777d42f3fa0d5b92dbceddfe156be;
    let prev_block_hash: [u8; 32] = [
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x79, 0x22, 0x62, 0x69, 0xfe, 0xaa, 0xcf, 0xf7, 0x77, 0xd4, 0x2f, 0x3f, 0xa0, 0xd5, 0xb9, 0x2d, 0xbc, 0xed, 0xdf, 0xe1, 0x56, 0xbe
    ];
    let merkle_root: [u8; 32] = [
        0x32, 0xc3, 0xae, 0xe5, 0x77, 0x09, 0x88, 0x2e, 0xaf, 0xf5, 0xa0, 0x47, 0xdc, 0x44, 0x39, 0x15, 0xaf, 0x1e, 0x42, 0x87, 0x4d, 0xf8, 0x98, 0xdb, 0xa7, 0x6c, 0x57, 0xf5, 0x30, 0xb2, 0xed, 0x7b
    ];
    let timestamp = 1710453557;
    let bits = 386095705;
    let nonce = 623717702;

    let block_header = BlockHeader { block_hash, version, prev_block_hash, merkle_root, timestamp, bits, nonce };

    println(block_header)
}

#[test]
fn test_main() {
    main();
	// Test block: https://blockchain.info/rawblock/0000000000000bae09a7a393a8acded75aa67e46cb81f7acaa5ad94f9eacd103
}
